{"version":3,"sources":["splash.js","basicsHomePage.js","handDominance.js","prediction.js","quiz.js","aslSigns.jpg","showimage.js","App.js","reportWebVitals.js","index.js"],"names":["SplashPage","style","height","width","display","position","alignItems","justifyContent","color","backgroundImage","to","backgroundColor","BasicHome","ChooseDomHand","alighnItems","labelMap","1","name","2","3","4","5","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","Quiz","webcamRef","useRef","canvasRef","runCoco","a","tf","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","img","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","executeAsync","obj","console","log","array","getContext","requestAnimationFrame","useEffect","className","ref","muted","marginLeft","left","right","textAlign","zindex","marginRight","ShowImage","src","image","alt","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91cc5125.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Button} from '@geist-ui/react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SplashPage = () => {\r\n  return (\r\n      <div style={{ height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          position: \"fixed\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          color: \"white\",\r\n          backgroundImage: `url(\"https://github.com/ismatullaevash/sign-language-app/blob/main/static/mesh-gradient.png?raw=true\")`}}>\r\n      <h1><center>Signnum</center>\r\n      <br></br> \r\n      <span>ASL made personal and easy using AI!</span>  \r\n      <br></br><br></br>\r\n      <center> <Link to=\"/basic\"><Button style={{ height: \"100%\",\r\n            backgroundColor: \"#B2D0DF\",\r\n            color: \"white\"\r\n            }}>Let's Learn!</Button></Link></center>\r\n      </h1> \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default SplashPage;\r\n","import React, { Component } from 'react';\r\nimport {Button} from '@geist-ui/react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BasicHome = () => {\r\n    return (\r\n        <div style={{ height: \"100%\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            position: \"fixed\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            color: \"white\",\r\n            backgroundImage: `url(\"https://github.com/ismatullaevash/sign-language-app/blob/main/static/mesh-gradient.png?raw=true\")`}}>\r\n        <h1><center>Basics</center>\r\n        <br></br> \r\n        <span>Start with the essentials follow along with the hand</span>  \r\n        <br></br><br></br>\r\n        <center> <Link to=\"/hand\"><Button style={{ height: \"100%\",\r\n            backgroundColor: \"#B2D0DF\",\r\n            color: \"white\"\r\n            }}>Turn on webcam!</Button></Link></center>\r\n        </h1> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicHome;","import React, { Component } from 'react';\r\nimport {Button} from '@geist-ui/react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ChooseDomHand = () => {\r\n    return (\r\n        <div style={{ height: \"100%\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            position: \"fixed\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            color: \"white\",\r\n            backgroundImage: `url(\"https://github.com/ismatullaevash/sign-language-app/blob/main/static/mesh-gradient.png?raw=true\")`}}>\r\n        <h1><center>First, choose your dominant hand</center>\r\n        <br></br><br></br>\r\n        <Link to=\"quiz\">\r\n       <Button style={{ height: \"100%\",\r\n              backgroundColor: \"#B2D0DF\",\r\n              color: \"white\",\r\n              alighnItems: \"left\"\r\n              }}>Left!</Button></Link>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Link to=\"guide\"><Button style={{ height: \"100%\",\r\n              backgroundColor: \"#B2D0DF\",\r\n              color: \"white\",\r\n              alighnItems: \"right\"\r\n              }}>Right!</Button></Link>\r\n        </h1> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChooseDomHand;","// Define our labelmap\r\n/*\r\nconst labelMap = {\r\n    0: { value: \"A\", color: \"red\" },\r\n    1: { value: \"B\", color: \"red\" },\r\n    2: { value: \"C\", color: \"red\" },\r\n    3: { value: \"D\", color: \"red\" },\r\n    4: { value: \"E\", color: \"red\" },\r\n    5: { value: \"F\", color: \"red\" },\r\n    6: { value: \"G\", color: \"red\" },\r\n    7: { value: \"H\", color: \"red\" },\r\n    8: { value: \"I\", color: \"red\" },\r\n    9: { value: \"J\", color: \"red\" },\r\n    10: { value: \"K\", color: \"red\" },\r\n    11: { value: \"L\", color: \"red\" },\r\n    12: { value: \"M\", color: \"red\" },\r\n    13: { value: \"N\", color: \"red\" },\r\n    14: { value: \"O\", color: \"red\" },\r\n    15: { value: \"P\", color: \"red\" },\r\n    16: { value: \"Q\", color: \"red\" },\r\n    17: { value: \"R\", color: \"red\" },\r\n    18: { value: \"S\", color: \"red\" },\r\n    19: { value: \"T\", color: \"red\" },\r\n    20: { value: \"U\", color: \"red\" },\r\n    21: { value: \"V\", color: \"red\" },\r\n    22: { value: \"W\", color: \"red\" },\r\n    23: { value: \"X\", color: \"red\" },\r\n    24: { value: \"Y\", color: \"red\" },\r\n    25: { value: \"Z\", color: \"red\" }\r\n\r\n}\r\n*/\r\n\r\nconst labelMap = {\r\n    1:{name:'Hello', color:'red'},\r\n    2:{name:'Thank You', color:'yellow'},\r\n    3:{name:'I Love You', color:'lime'},\r\n    4:{name:'Yes', color:'blue'},\r\n    5:{name:'No', color:'purple'},\r\n}\r\n\r\n\r\n\r\n// Define a drawing function\r\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx) => {\r\n    for (let i = 0; i <= boxes.length; i++) {\r\n        if (boxes[i] && classes[i] && scores[i] > threshold) {\r\n            // Extract variables\r\n            const [y, x, height, width] = boxes[i]\r\n            const text = classes[i]\r\n\r\n            // Set styling\r\n            ctx.strokeStyle = labelMap[text]['color']\r\n            ctx.lineWidth = 10\r\n            ctx.fillStyle = 'white'\r\n            ctx.font = '30px Arial'\r\n\r\n            // DRAW!!\r\n            ctx.beginPath()\r\n            ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10)\r\n            ctx.rect(x * imgWidth, y * imgHeight, width * imgWidth / 2, height * imgHeight / 1.5);\r\n            ctx.stroke()\r\n        }\r\n    }\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Webcam from \"react-webcam\";\r\nimport { nextFrame } from \"@tensorflow/tfjs\";\r\n// 2. TODO - Import drawing utility here\r\n// e.g. import { drawRect } from \"./utilities\";\r\nimport { drawRect } from \"./prediction\";\r\nconst Quiz = () => {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Main function\r\n  const runCoco = async () => {\r\n    // 3. TODO - Load network\r\n    // e.g. const net = await cocossd.load();\r\n    //below is working model\r\n    // https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\r\n\r\n    //\"https://signum-ml-sign-app.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\"\r\n    const net = await tf.loadGraphModel(\r\n      \"https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\"\r\n    );\r\n\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 16.7);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // 4. TODO - Make Detections\r\n      const img = tf.browser.fromPixels(video);\r\n      const resized = tf.image.resizeBilinear(img, [640, 480]);\r\n      const casted = resized.cast(\"int32\");\r\n      const expanded = casted.expandDims(0);\r\n      const obj = await net.executeAsync(expanded);\r\n      console.log(obj);\r\n\r\n      const boxes = await obj[1].array();\r\n      const classes = await obj[2].array();\r\n      const scores = await obj[4].array();\r\n\r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      // 5. TODO - Update drawing utility\r\n      // drawSomething(obj, ctx)\r\n      requestAnimationFrame(() => {\r\n        drawRect(\r\n          boxes[0],\r\n          classes[0],\r\n          scores[0],\r\n          0.8,\r\n          videoWidth,\r\n          videoHeight,\r\n          ctx\r\n        );\r\n      });\r\n\r\n      tf.dispose(img);\r\n      tf.dispose(resized);\r\n      tf.dispose(casted);\r\n      tf.dispose(expanded);\r\n      tf.dispose(obj);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    runCoco();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <header\r\n        className=\"App-header\"\r\n        style={{\r\n          backgroundImage: `url(\"https://github.com/ismatullaevash/sign-language-app/blob/main/static/mesh-gradient.png?raw=true\")`,\r\n        }}\r\n      >\r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n            backgroundImage: `url(\"https://github.com/ismatullaevash/sign-language-app/blob/main/static/mesh-gradient.png?raw=true\")`,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            position: \"flex\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            width: 640,\r\n            height: 480,\r\n            textAlign: \"left\",\r\n            color: \"white\",\r\n            backgroundImage: `url(\"https://github.com/ismatullaevash/sign-language-app/blob/main/static/mesh-gradient.png?raw=true\")`,\r\n          }}\r\n        >\r\n          <h1>Now try it out yourself!</h1>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\nexport default Quiz;\r\n","export default __webpack_public_path__ + \"static/media/aslSigns.c51e4ebf.jpg\";","import React, { Component } from 'react';\r\nimport { Button } from '@geist-ui/react';\r\nimport image from './aslSigns.jpg'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ShowImage = () => {\r\n    return (\r\n        <div style={{ height: \"100%\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            position: \"fixed\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            color: \"white\",\r\n            backgroundImage: `url(\"https://github.com/ismatullaevash/sign-language-app/blob/main/static/mesh-gradient.png?raw=true\")`}}>\r\n        \r\n            <center><img src={image} alt=\"ASL Signs\" style={{\r\n                height: 210,\r\n                width: 300,\r\n            }} /></center>\r\n\r\n\r\n\r\n            <br></br> <br></br>\r\n            <center><Link to=\"quiz\"><Button style={{ height: \"100%\",\r\n            backgroundColor: \"#B2D0DF\",\r\n            color: \"white\"\r\n            }}>Continue</Button></Link></center>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowImage;","import { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport SplashPage from \"./splash\";\nimport BasicHome from \"./basicsHomePage\";\nimport ChooseDomHand from \"./handDominance\";\nimport Quiz from \"./quiz\";\nimport ShowImage from \"./showimage\";\n\nfunction App() {\n  return (\n    <div >\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <SplashPage />\n          </Route>\n          <Route exact path=\"/basic\">\n            <BasicHome />\n          </Route>\n          <Route exact path=\"/hand\">\n            <ChooseDomHand />\n          </Route>\n          <Route exact path=\"/guide\">\n            <ShowImage />\n          </Route>\n          <Route exact path=\"/quiz\">\n            <Quiz />\n          </Route>\n          <Route render={() => <h1>Not Found</h1>} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}